extends layout

block content
  div(class="container-fluid")
  
    if (err)
        div
            h2(style = "color: red;")= err
  
    img(src="https://avatars0.githubusercontent.com/Rafase282?&s=128" alt="My Face")
    p
      a(href="mailto:rafase282@gmail.com") 
        i(class="fa fa-envelope fa-fw")
      a(href="https://github.com/Rafase282" target="_blank") 
        i(class="fa fa-github fa-fw")
      a(href="https://www.linkedin.com/in/rafase282" target="_blank") 
        i(class="fa fa-linkedin")
      a(href="http://codepen.io/Rafase282" target="_blank") 
        i(class="fa fa-codepen")
      a(href="https://rafase282.wordpress.com/" target="_blank") 
        i(class="fa fa-wordpress")
      a(href="http://www.freecodecamp.com/rafase282" target="_blank")
        i(class="fa fa-fire fa-fw")
    p Created by Rafael (Rafase282) Rodriguez.
    h1(class="header")
      | Manga Record Microservice
    p.
      This is an API created to store crucial information for any manga an authenticated user might read. Wtheer you want to keep track of the manga
      you will rea, already finished or are currently reading this microservice will help you get your data together. In the Future I intend on adding more features
      but meanwhile the user interface will be separated and this stays as the core backend.
    br
    p.
      There is an admin account that is declared onteh envarioment variables that basically has root access, it must be created and a secure password used.
      The admin can override any information if needed including passwords. In the future I will implement email services to mail queries, and particularly to allow for
      password reset if forgotten.
        
        
    h3 What you can do:
    ol
      li Create a manga accessed at:
        code POST https://mangadb-r282.herokuapp.com/api/mangas/:user/title=Aiki&author=Isutoshi&url=http%3A%2F%2Fwww.readmanga.today%2Faiki&userStatus=reading&type=Japanese&categories=Action%2C+Ecchi%2C+Martial+Arts%2C+Mature%2C+Seinen&chapter=14&seriesStatus=Completed&plot=There+is+fighting+at+the+high+school+due+to+a+power+struggle+for+control.+The+granddaughter+of+the+chief+director+requests+help+from+the+Aikido+fighting+style+genius.+Will+he+help%3F+Or+will+he+show+his+true+colors+with+his+bad+boy+ways%3F
      li Get the manga by title:
        code GET https://mangadb-r282.herokuapp.com/api/mangas/:user/:manga_title)
      li Update the manga with this title:
        code PUT https://mangadb-r282.herokuapp.com/api/mangas/:user/:manga_title
      li Delete the manga by title
        code DELETE https://mangadb-r282.herokuapp.com/api/mangas/:user/:manga_title
      li Admin can get a list of all the mangas across the user base.
        code GET https://mangadb-r282.herokuapp.com/api/mangas
      li Admin can get a list of all users.
        code GET https://mangadb-r282.herokuapp.com/api/users
      li Admin can delete all users including itself, this requires the admin to be re-created.
        code DELETE https://mangadb-r282.herokuapp.com/api/mangas
      li Admin can get a list of all the mangas across the user base.
        code GET https://mangadb-r282.herokuapp.com/api/mangas
    br
    p
      | Keep in mine that for creating and updating all fields are required.
      | Also for the PUT
      code Content-Type: application/x-www-form-urlencoded
    br
    h3 The Manga Schema
    code.
        {
          title: {
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          },
          author: {
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          },
          url: {
            type: String,
            trim: true,
            required: true,
            unique: false
          },
          userStatus: {
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          },
          type: {
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          },
          categories: [{
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          }],
          chapter: {
            type: Number,
            required: true,
            unique: false,
            min: 0,
            match: /[0-9]/
          },
          seriesStatus: {
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          },
          plot: {
            type: String,
            lowercase: true,
            trim: true,
            required: true,
            unique: false,
            match: /[a-z]/
          },
          altName: [{
            type: String,
            lowercase: true,
            trim: true,
            required: false,
            unique: false,
            match: /[a-z]/
          }],
          direction: {
            type: String,
            lowercase: true,
            trim: true,
            required: false,
            unique: false,
            match: /[a-z]/
          },
          userId: {
            type: String,
            lowercase: true,
            trim: true,
            required: false,
            unique: false,
            match: /[a-z-0-9]+/
          },
          username: {
            type: String,
            lowercase: true,
            trim: true,
            required: false,
            unique: false,
            match: /[a-z-0-9]+/
          },
          thumbnail: {
            type: String,
            trim: true,
            required: true,
            unique: false
          }
        }
    br
    h3 The User Schema
    code.
        {
        username: {
          type: String,
          lowercase: true,
          trim: true,
          required: true,
          unique: true,
          match: /[a-z-0-9]+/
        },
        password: {
          type: String,
          trim: true,
          required: true,
          unique: false
        },
        email: {
          type: String,
          lowercase: true,
          trim: true,
          required: true,
          unique: true
        },
        firstname: {
          type: String,
          lowercase: true,
          trim: true,
          required: false,
          unique: false,
          match: /[a-z]/
        },
        lastname: {
          type: String,
          lowercase: true,
          trim: true,
          required: false,
          unique: false,
          match: /[a-z]/
        }
        }